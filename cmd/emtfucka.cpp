/****************************************
				EMTFUCKER
	Converts between OGG & 25TL's EMT
****************************************/

#include "emtfucka.h"
#include <Windows.h>
#include <stdio.h>

BYTE bEMTHeader[137] = {
	0xEB, 0x9B, 0x71, 0x2F, 0x66, 0xDD, 0xD5, 0xC7, 0x90, 0xCB, 0x09, 0x71, 0x01, 0x6D,
	0x87, 0x0F, 0x21, 0x59, 0x1A, 0x8E, 0x3D, 0x7A, 0x95, 0xC6, 0xDB, 0x10, 0xC4, 0xA1,
	0x4B, 0xF8, 0xA3, 0x80, 0x7F, 0x2E, 0xCE, 0xDA, 0x1D, 0x90, 0x39, 0x26, 0xD1, 0xE4,
	0x4C, 0x36, 0x9B, 0x00, 0x42, 0x77, 0x1B, 0xDA, 0x4B, 0xDD, 0xA8, 0x30, 0x8F, 0x82,
	0xA8, 0xA9, 0xFD, 0xE9, 0x9C, 0x8C, 0x52, 0x2D, 0x49, 0x5F, 0x8D, 0x9F, 0xC6, 0xAB,
	0xA3, 0xB1, 0xD3, 0xFF, 0x75, 0x13, 0x6C, 0x37, 0xFF, 0x1B, 0x9E, 0xFE, 0xD2, 0x6A,
	0x9A, 0x92, 0xC4, 0xCD, 0x08, 0xC8, 0xE6, 0x61, 0x9D, 0x4F, 0xB6, 0xFB, 0xF0, 0x38,
	0x96, 0xC6, 0x89, 0xB6, 0x7D, 0x2E, 0x3B, 0x23, 0xED, 0xFD, 0xB5, 0x44, 0x25, 0xC4,
	0x53, 0xCE, 0x97, 0x7D, 0x3A, 0x29, 0x9C, 0x6E, 0xA3, 0x73, 0x67, 0x51, 0x77, 0xC8,
	0x37, 0xB1, 0x1D, 0xC1, 0xD1, 0x97, 0x8F, 0x3A, 0x2E, 0x66, 0xB4
};

// Convert to OGG
void ConvertEMTFile( const char* input, const char* output ) {
	FILE* pEmt;
	FILE* pOut;
	BYTE bByte;

	bByte = 0;
	pEmt = fopen( input, "rb" );
	if( !pEmt ) {
		printf( "Couldn't open %s for reading", input );
		exit( -1 );
	}

	pOut = fopen( output, "wb" );

	if( !pOut ) {
		printf( "Couldn't open %s for writing", output );
		exit( -1 );
	}

	fseek( pEmt, 137, 0 );
	while( !feof(pEmt) ) {
		fread( &bByte, 1, 1, pEmt );
		fwrite( &bByte, 1, 1, pOut );
	}

	fclose( pEmt );
	fclose( pOut );
}

// Convert to EMT
void ConvertOGGFile( const char* input, const char* output ) {
	FILE* pOgg;
	FILE* pOut;
	BYTE bByte;

	bByte = 0;
	pOgg = fopen( input, "rb" );
	if( !pOgg ) {
		printf( "Couldn't open %s for reading", input );
		exit( -1 );
	}

	pOut = fopen( output, "wb" );
	if( !pOut ) {
		printf( "Couldn't open %s for writing", output );
		exit( -1 );
	}

	fwrite( bEMTHeader, 1, 137, pOut );
	while( !feof(pOgg) ) {
		fread( &bByte, 1, 1, pOgg );
		fwrite( &bByte, 1, 1, pOut );
	}

	fclose( pOgg );
	fclose( pOut );
}